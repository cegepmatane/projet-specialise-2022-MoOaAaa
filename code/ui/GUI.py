# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import subprocess
import threading
import time

from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from src.GrammarCorrect import GrammarCorrect



class Ui_MainWindow(object):


    def __init__(self):
        self.n = 100
        self.tool = GrammarCorrect()

    def loadingScreen(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(700, 350)

        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        layout = QVBoxLayout()
        self.centralWidget.setLayout(layout)

        self.frame = QFrame()
        self.frame.setObjectName("frame")
        layout.addWidget(self.frame)

        MainWindow.setWindowFlag(Qt.FramelessWindowHint)
        MainWindow.setAttribute(Qt.WA_TranslucentBackground)

        self.progressBar = QProgressBar(self.centralWidget)
        self.progressBar.resize(self.width() - 200 - 10, 50)
        self.progressBar.move(100, 180)  # self.descriptionLabel.y()+130
        self.progressBar.setAlignment(Qt.AlignCenter)
        self.progressBar.setFormat('%p%')
        self.progressBar.setTextVisible(False)
        self.progressBar.setRange(0, self.n)
        self.progressBar.setValue(2)

        self.titleLabel = QLabel(self.centralWidget)
        self.titleLabel.setObjectName('titleLabel')
        self.titleLabel.resize(690, 120)
        self.titleLabel.move(0, 5)
        self.titleLabel.setText('Loading Screen')
        self.titleLabel.setAlignment(Qt.AlignCenter)

        self.descriptionLabel = QLabel(self.centralWidget)
        self.descriptionLabel.resize(690, 40)
        self.descriptionLabel.move(0, self.titleLabel.height())
        self.descriptionLabel.setObjectName('descLabel')
        self.descriptionLabel.setText('<b>Corrector</b>')
        self.descriptionLabel.setAlignment(Qt.AlignCenter)


        self.loadingLabel = QLabel(self.centralWidget)
        self.loadingLabel.resize(self.width() - 10, 50)
        self.loadingLabel.move(0, self.progressBar.y() + 70)
        self.loadingLabel.setObjectName('loadingLabel')
        self.loadingLabel.setAlignment(Qt.AlignCenter)
        self.loadingLabel.setText('Loading...')

        MainWindow.setCentralWidget(self.centralWidget)

    def setProgressBarVal(self,val):
        self.progressBar.setValue(val)

    def loading(self):
        i = 0
        self.thread = threading.Thread(target=self.tool.check(""))
        self.thread.start()
        while self.thread.is_alive():
            i+=1
            time.sleep(0.3)
            self.setProgressBarVal(i)
            print("amalive")
        print("amdead")

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 589)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")

        self.correctBtn = QtWidgets.QPushButton(self.centralWidget)
        self.correctBtn.setGeometry(QtCore.QRect(10, 500, 90, 25))
        self.correctBtn.setObjectName("correctBtn")
        self.correctBtn.clicked.connect(self.correctClick)

        self.suppr_all = QtWidgets.QPushButton(self.centralWidget)
        self.suppr_all.setGeometry(QtCore.QRect(130, 500, 90, 25))
        self.suppr_all.setObjectName("suppr_all")
        self.suppr_all.clicked.connect(self.supprClick)

        self.typosTxt = QtWidgets.QTextEdit(self.centralWidget)
        self.typosTxt.setGeometry(QtCore.QRect(405, 5, 390, 240))
        self.typosTxt.setReadOnly(True)
        self.typosTxt.setObjectName("correctedTxt")
        self.correctedScrollBar = self.typosTxt.verticalScrollBar()
        self.correctedScrollBar.setValue(self.correctedScrollBar.maximum())

        self.correctedTxt = QtWidgets.QTextEdit(self.centralWidget)
        self.correctedTxt.setGeometry(QtCore.QRect(405, 250, 390, 240))
        self.correctedTxt.setReadOnly(True)
        self.correctedTxt.setObjectName("correctedTxt")
        self.correctedScrollBar = self.correctedTxt.verticalScrollBar()
        self.correctedScrollBar.setValue(self.correctedScrollBar.maximum())

        self.textToCorrect = QtWidgets.QTextEdit(self.centralWidget)
        self.textToCorrect.setGeometry(QtCore.QRect(5, 5, 390, 485))
        self.textToCorrect.setObjectName("textToCorrect")
        self.textToCorrect.setPlaceholderText("Tapez du texte à corriger ou collez du texte")
        self.toCorrectScrollBar = self.textToCorrect.verticalScrollBar()
        self.toCorrectScrollBar.setValue(self.toCorrectScrollBar.maximum())

        MainWindow.setcentralWidget(self.centralWidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Correcteur"))
        self.correctBtn.setText(_translate("MainWindow", "Corriger"))
        self.suppr_all.setText(_translate("MainWindow", "Tout supprimer"))

    def correctClick(self):
        toCorrect = self.textToCorrect.toPlainText()
        print(toCorrect)
        print(self.tool.check(toCorrect))

        toolCheck = self.tool.check(toCorrect)
        categories = {match.category: match.message for match in toolCheck}
        print(categories)

        message = [( match.category + ' :\n  ' + match.message) for match in toolCheck]
        correct = self.tool.correct(toCorrect)

        s = '\n\n'.join(message)
        self.typosTxt.setText(s)
        self.correctedTxt.setText("Correction proposée : \n\n" + correct)

    def supprClick(self):
        self.textToCorrect.setText("")
        self.correctedTxt.setText("")